Index: src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport './index.scss';\r\nimport { Success } from './components/Success';\r\nimport { Users } from './components/Users';\r\n\r\n// Тут список пользователей: https://reqres.in/api/users\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Users />\r\n      {/* <Success /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.js b/src/App.js
--- a/src/App.js	
+++ b/src/App.js	
@@ -1,15 +1,83 @@
-import React from 'react';
 import './index.scss';
-import { Success } from './components/Success';
-import { Users } from './components/Users';
+import React, {useState} from 'react';
+
+
+
+const questions = [
+  {
+    title: 'React - это ... ?',
+    variants: ['библиотека', 'фреймворк', 'приложение'],
+    correct: 0,
+  },
+  {
+    title: 'Компонент - это ... ',
+    variants: ['приложение', 'часть приложения или страницы', 'то, что я не знаю что такое'],
+    correct: 1,
+  },
+  {
+    title: 'Что такое JSX?',
+    variants: [
+      'Это простой HTML',
+      'Это функция',
+      'Это тот же HTML, но с возможностью выполнять JS-код',
+    ],
+    correct: 2,
+  },
+];
 
-// Тут список пользователей: https://reqres.in/api/users
+function Result({correct,onRestartGame}) {
+  return (
+    <div className="result">
+      <img src="https://cdn-icons-png.flaticon.com/512/2278/2278992.png" />
+      <h2>Вы ответили на {correct} ответа из {questions.length}</h2>
+      <button onClick={onRestartGame} >Попробовать снова</button>
+    </div>
+  );
+}
+
+function Game({step,question,onClickVariant}) {
+    const procent=Math.round((step / questions.length) * 100);
+    console.log(procent);
+    return (
+    <>
+      <div className="progress">
+        <div style={{ width: `${procent}%` }} className="progress__inner"></div>
+      </div>
+      <h1>{question.title}</h1>
+      <ul>
+          {
+              question.variants.map((text,index)=>(
+                  <li key={text} onClick={()=>onClickVariant(index)}>{text}</li>
+              ))
+          }
+      </ul>
+    </>
+  );
+}
 
 function App() {
+    const [step, setStep] = useState(0);
+    const [correct,setCorrect]=useState(0)
+
+    const question = questions[step];
+    function onClickVariant(index){
+        console.log(step,index)
+        setStep(step+1)
+        if (index==question.correct){
+            setCorrect(correct+1)
+        }
+    }
+    function restartGame() {
+        setStep(0);
+        setCorrect(0);
+    }
   return (
     <div className="App">
-      <Users />
-      {/* <Success /> */}
+        {
+            step!==questions.length ? (  <Game step={step} question={question} onClickVariant={onClickVariant} />)
+                : ( <Result correct={correct} onRestartGame={restartGame} /> )
+        }
+
     </div>
   );
 }
